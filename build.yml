# NeON build file (http://github.com/c4s4/neon)

extends: [golang, git, changelog]
expose:  [LIBRARIES, clean, check, test, release]

properties:
  LIBRARIES: [github.com/joho/godotenv]

environment:
  GOPATH: '${GOPATH}:={_BASE}'

targets:

  test:
    doc: Run an integration test
    depends: bin
    steps:
    # test without -env option
    - write: '={BUILD_DIR}/test'
      text:  "#!/bin/sh\necho $FOO\necho $BAR\necho $BAZ"
    - chmod: '={BUILD_DIR}/test'
      mode:  0755
    - $:  ['={BUILD_DIR}/dotrun', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "SPAM\nEGGS"'
      then:
      - throw: "Test failed:\n={output}"
    # test with -env option
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env2', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "TOTO\nTITI"'
      then:
      - throw: "Test failed:\n={output}"
    # test with two -env options
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env', '-env', '.env3', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "SPAM\nEGGS\nTUTU"'
      then:
      - throw: "Test failed:\n={output}"
    # test with two -env options overwrite
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env', '-env', '.env2', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "TOTO\nTITI"'
      then:
      - throw: "Test failed:\n={output}"
    - print: 'Test OK'

  deploy:
    doc: Deploy installation script and binaries
    depends: binaries
    steps:
    - print: 'Deploying ={NAME} binaries...'
    - $: ['scp', 'install', =WEB_HOME]
    - 'binaries = join(find(".", BUILD_DIR+"/bin/*"), " ")'
    - $: 'scp ={binaries} ={WEB_HOME}'

  release:
    doc: Perform a release
    depends: [clean, check, test, archive, deploy]
    steps:
    - super:
