# NeON build file (http://github.com/c4s4/neon)

extends: golang
default: [fmt, check, test]
expose:  [fmt, check, test, release]
configuration: '~/.neon/github.yml'
# GITHUB_TOKEN: 'abcdefghijklmnopqrstuvwxyz0123456789'

targets:

  test:
    doc: Run tests and integration test
    depends: [version-test, build]
    steps:
    - super:
    - print: '\=== Running Integration tests'
    # test without -env option
    - write: '={BUILD_DIR}/test'
      text:  "#!/bin/sh\necho $FOO\necho $BAR\necho $BAZ"
    - chmod: '={BUILD_DIR}/test'
      mode:  0755
    - $:  ['={BUILD_DIR}/dotrun', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "SPAM\nEGGS"'
      then:
      - throw: "Test failed:\n={output}"
    # test with -env option
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env2', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "TOTO\nTITI"'
      then:
      - throw: "Test failed:\n={output}"
    # test with two -env options
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env', '-env', '.env3', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "SPAM\nEGGS\nTUTU"'
      then:
      - throw: "Test failed:\n={output}"
    # test with two -env options overwrite
    - $:  ['={BUILD_DIR}/dotrun', '-env', '.env', '-env', '.env2', '={BUILD_DIR}/test']
      1=: output
      1x: true
    - if: 'output != "TOTO\nTITI"'
      then:
      - throw: "Test failed:\n={output}"
    # test with shell
    - $:  ['={BUILD_DIR}/dotrun', '-shell', 'echo $FOO']
      1=: output
      1x: true
    - if: 'output != "SPAM"'
      then:
      - throw: "Test failed:\n={output}"
    # test with shell in more than one piece
    - $:  ['={BUILD_DIR}/dotrun', '-shell', 'echo', '$FOO']
      1=: output
      1x: true
    - if: 'output != "SPAM"'
      then:
      - throw: "Test failed:\n={output}"
    - print: 'OK Integration tests'
